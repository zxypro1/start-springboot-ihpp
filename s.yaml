# 提交流水线执行
kind: Pipeline
# 流水线执行名称，需要全局唯一。如果流水线模板存在，则不能成功提交流水线执行
# 推荐使用commitID与时间戳构造唯一的名称
name: "p-<% .git.shortCommitId %>-<% .currentTimestampMs %>"
# 一些任意的描述信息
description: 'demo pipeline'
# 添加任意的labels，用于查询过滤
# 应用中心会在提交时也会添加其他labels
labels:
  myLabel: my-cicd-example
spec:
  context:
    data:
      appName: <% .appName %>
      envName: <% .envName %>
      deployFile: s.yaml
      runnerConfig:
        logConfig:
          project: fc-app-cn-hangzhou-ea5eddc9-50f1-5e6c-93e5-7fa5d25e28dd
          logstore: function-log
        memory: 8192
        regionId: cn-hangzhou
        serviceRole: acs:ram::1003293809975419:role/aliyunfcserverlessdevsrole
        internetAccess: true
        cpu: 6
        timeout: 600

  templateSpec:
    # 要执行的任务，默认所有任务会一同尝试执行
    # 执行会满足runAfters引入的先后约束，任务必须在runAfters声明的任务执行完毕后才可以被执行
    # 用户可以使用此特性，达到DAG描述的效果
    tasks:
      # 构建前检查
      - name: pre-check
        context:
          data:
            displayName: 前置检查1231
            enable: true
            steps:
              - plugin: "@serverless-cd/checkout"
              - plugin: "@serverless-cd/s-setup"
              - run: s plan -t \${{ ctx.data.deployFile || s.yaml }}
              - run: echo "s plan finished."
        taskTemplate: serverless-runner-task
        runAfters:
          - name: build-and-deploy-zo7q
      - name: build-and-deploy
        context:
          data:
            enable: true
            steps:
              - plugin: "@serverless-cd/checkout"
              - plugin: "@serverless-cd/s-setup"
              - run: |
                  set -e  
                  s deploy -t \${{ ctx.data.deployFile || s.yaml }} --use-local --assume-yes --skip-push 
                  echo "Deploy by Serverless Devs success."
        taskTemplate: serverless-runner-task
        runAfters: []
      - name: build-and-deploy-zo7q
        context:
          data:
            displayName: "构建部署"
            enable: true
            steps:
              - plugin: "@serverless-cd/checkout"
              - plugin: "@serverless-cd/s-setup"
              - run: s deploy -t "${{ ctx.data.deployFile }}" --use-local --assume-yes
                  --skip-push
        taskTemplate: serverless-runner-task
      - name: fc-canary-87hl
        context:
          data:
            displayName: 版本灰度
            enable: true
            steps:
              - plugin: "@serverless-cd/checkout"
              - plugin: "@serverless-cd/s-setup"
              - plugin: "@serverless-cd/fc-canary"
                inputs:
                  serviceName: my-fc-service
                  aliasName: dev
                  regionId: cn-hangzhou
                  canaryPercent: 50
        taskTemplate: serverless-runner-task
      - name: fc-canary-1zsi
        context:
          data:
            displayName: 版本灰度2
            enable: true
            steps:
              - plugin: "@serverless-cd/checkout"
              - plugin: "@serverless-cd/s-setup"
              - plugin: "@serverless-cd/fc-canary"
                inputs:
                  serviceName: my-fc-service
                  aliasName: dev
                  regionId: cn-hangzhou
                  canaryPercent: 50
        taskTemplate: serverless-runner-task
      - name: fc-canary-5rnb
        context:
          data:
            displayName: 版本灰度3
            enable: true
            steps:
              - plugin: "@serverless-cd/checkout"
              - plugin: "@serverless-cd/s-setup"
              - plugin: "@serverless-cd/fc-canary"
                inputs:
                  serviceName: my-fc-service
                  aliasName: dev
                  regionId: cn-hangzhou
                  canaryPercent: 50
        taskTemplate: serverless-runner-task
